{
   "behaviorVariables" : [
      {
         "k" : "Float_PreferLowerMovementFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : -0.1,
         }
      },
	  {
	     "k" : "Float_PreferHigherExpectedDamageToHostileFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : 2.5,
         }
      },
      {
         "k" : "Float_PreferAttackFromBehindHostileFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : 1.6,
         }
      },
      {
         "k" : "Float_PreferAttackFrom90DegreesToHostileFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : 1.5,
         }
      },
      {
         "k" : "Float_PreferNoCloserThanMinDistToHostileFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : 10.0,
         }
      },
      {
         "k" : "Float_PreferLessTargetableLocationFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : 1.5,
         }
      },
      {
         "k" : "Float_ShootingDamageMultiplier",
         "v" : {
            "type" : "Float",
            "floatVal" : 2.0,
         }
      },
      {
         "k" : "Float_MeleeDamageMultiplier",
         "v" : {
            "type" : "Float",
            "floatVal" : 0.5,
         }
      },
      {
         "k" : "Float_PreferInsideMeleeRangeFactorWeight",
         "v" : {
            "type" : "Float",
            "floatVal" : -10.0,
         }
      },
	  	{
	    /* If a target is a melee revenge target, what additional
	       damage multiplier to apply. The total multiplier is
	       Float_MeleeDamageMultiplier +
	       FloatMeleeRevengeBonus. */
            "k" : "Float_MeleeRevengeBonus",
            "v" : {
		"type" : "Float",
		"floatVal" : 0.0,
            }
	},
		{
	    /* Influence Factor Weight to control the desire to be
	       inside forests or other locations that grant guard. */
            "k" : "Float_PreferLocationsThatGrantGuardFactorWeight",
            "v" : {
		"type" : "Float",
		"floatVal" : 1.0,
            }
	},
		{
	    /* Influence Factor to prefer this lance to surround
	       hostile units WHEN SPRINTING.*/
	    "k" : "Float_SprintPreferSurroundingHostileUnitsFactorWeight",
	    "v" : {
		"type" : "Float",
		"floatVal" : 0.5,
	    }
	},
		{
	    /* Fence radius (in meters) for
	     * PreferStayInsideFenceFactor. */
	    "k" : "Float_FenceRadius",
	    "v" : {
		"type" : "Float",
		"floatVal" : 250,
	    }
	},
		{
	    /* Weight for an influence factor that seeks to stay
	       within a circular fence from the centerpoint of the
	       lance WHEN SPRINTING. Note - negative logic; this
	       should use negative numbers, as it's designed to
	       discourage being outside the radius and have no effect
	       inside the fence. */
	    "k" : "Float_SprintPreferStayInsideFenceNegativeLogicFactorWeight",
	    "v" : {
		"type" : "Float",
		"floatVal" : 0.0,
	    }
	},
	{
      "k": "Float_PreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.0,
      }
    },
    {
      "k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.5,
      }
    },
	{
	  "k" : "Float_PreferHigherDistanceFromClosestHostileFactorWeight",
      "v" : {
        "type" : "Float",
        "floatVal" : 5.0,
      }
    },
	{
	  "k" : "Float_PreferHigherPositionFactorWeight",
	  "v" : {
	    "type" : "Float",
	    "floatVal" : 1.5,
	  }
	},
	{
      "k" : "Float_SprintPreferHigherPositionFactorWeight",
      "v" : {
        "type" : "Float",
        "floatVal" : 2.0,
	  }
	},
	{
	    /* Influence Factor Weight to prefer facing hostiles.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat
	    */
      "k" : "Float_PreferFacingHostileFactorWeight",
      "v" : {
		"type" : "Float",
		"floatVal" : 1.0,
      }
	},
	{
	    /* Influence Factor Weight to prefer facing hostiles WHEN
	       SPRINTING.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat
	    */
      "k" : "Float_SprintPreferFacingHostileFactorWeight",
      "v" : {
		"type" : "Float",
		"floatVal" : 0.1,
      }
	},
	{
	    /* When a buddy is exposed to enemy fire alone, apply this
	     * weight to locations that DO NOT have line of fire to
	     * hostiles. Probably negative. */
      "k" : "Float_BuddyAloneFiringSolutionPreferenceWeight",
      "v" : {
		"type" : "Float",
		"floatVal" : -1.0,
            }
	},
	{
	    /* When a buddy is exposed to enemy fire alone, apply this
	     * weight to locations that DO NOT have line of fire to
	     * hostiles WHEN SPRINTING. Probably negative. */
      "k" : "Float_SprintBuddyAloneFiringSolutionPreferenceWeight",
      "v" : {
		"type" : "Float",
		"floatVal" : -0.5,
            }
	},
	{
	    /* When a buddy is exposed to enemy fire alone, apply this
	     * weight to locations that DO NOT have line of fire to
	     * hostiles. Probably negative. */
      "k" : "Float_BuddyAloneFiringSolutionPreferenceWeight",
      "v" : {
		"type" : "Float",
		"floatVal" : -0.5,
            }
	},
	{
	    /* When a buddy is exposed to enemy fire alone, apply this
	     * weight to locations that DO NOT have line of fire to
	     * hostiles WHEN SPRINTING. Probably negative. */
            "k" : "Float_SprintBuddyAloneFiringSolutionPreferenceWeight",
            "v" : {
		"type" : "Float",
		"floatVal" : -0.8,
            }
	},
    ]
}
